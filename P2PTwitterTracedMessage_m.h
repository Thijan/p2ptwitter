//
// Generated file, do not edit! Created by opp_msgc 4.1 from applications/p2ptwitter/P2PTwitterTracedMessage.msg.
//

#ifndef _P2PTWITTERTRACEDMESSAGE_M_H_
#define _P2PTWITTERTRACEDMESSAGE_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0401
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif

// cplusplus {{
#include <OverlayKey.h>
// }}



/**
 * Class generated from <tt>applications/p2ptwitter/P2PTwitterTracedMessage.msg</tt> by opp_msgc.
 * <pre>
 * packet P2PTwitterTracedMessage
 * {
 *     
 *     OverlayKey groupId;
 * 
 *     
 *     long mcastId;
 * 
 *     
 *     
 *     int senderId;
 *     
 *     
 *     int receiverId;
 * 	
 * 	
 * 	int tweetID;
 * 	
 * 	
 * 	string uName;
 * 	string screen_name;
 * 	string tweet;
 * 	int uId;
 * 	int uTweet_count;	
 * }
 * </pre>
 */
class P2PTwitterTracedMessage : public ::cPacket
{
  protected:
    ::OverlayKey groupId_var;
    long mcastId_var;
    int senderId_var;
    int receiverId_var;
    int tweetID_var;
    opp_string uName_var;
    opp_string screen_name_var;
    opp_string tweet_var;
    int uId_var;
    int uTweet_count_var;

    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const P2PTwitterTracedMessage&);

  public:
    P2PTwitterTracedMessage(const char *name=NULL, int kind=0);
    P2PTwitterTracedMessage(const P2PTwitterTracedMessage& other);
    virtual ~P2PTwitterTracedMessage();
    P2PTwitterTracedMessage& operator=(const P2PTwitterTracedMessage& other);
    virtual P2PTwitterTracedMessage *dup() const {return new P2PTwitterTracedMessage(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual OverlayKey& getGroupId();
    virtual const OverlayKey& getGroupId() const {return const_cast<P2PTwitterTracedMessage*>(this)->getGroupId();}
    virtual void setGroupId(const OverlayKey& groupId_var);
    virtual long getMcastId() const;
    virtual void setMcastId(long mcastId_var);
    virtual int getSenderId() const;
    virtual void setSenderId(int senderId_var);
    virtual int getReceiverId() const;
    virtual void setReceiverId(int receiverId_var);
    virtual int getTweetID() const;
    virtual void setTweetID(int tweetID_var);
    virtual const char * getUName() const;
    virtual void setUName(const char * uName_var);
    virtual const char * getScreen_name() const;
    virtual void setScreen_name(const char * screen_name_var);
    virtual const char * getTweet() const;
    virtual void setTweet(const char * tweet_var);
    virtual int getUId() const;
    virtual void setUId(int uId_var);
    virtual int getUTweet_count() const;
    virtual void setUTweet_count(int uTweet_count_var);
};

inline void doPacking(cCommBuffer *b, P2PTwitterTracedMessage& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, P2PTwitterTracedMessage& obj) {obj.parsimUnpack(b);}


#endif // _P2PTWITTERTRACEDMESSAGE_M_H_
